-------------------------------primera parte-------------------------
a continuacion voy a resumir en un esquema  mi proyecto te pido por favor que me ayudes a comentar
cada parte esencial para saber para que sirve cada  uno 

1. components
 	1.1 FormularioUsuario.vue
	1.2 HelloWord.vue
	1.3 Tablausuario.vue

2. router
        2.1 index.js

3. store
	3.1 index.js
4. views
	4.1 AboutView.vue
	4.2 HomeView.vue
	4.3 UsuarioView.vue

5. App.vue
	5.1 main.js

----------------------------segunda parte---------------------------------
a continuacion te envio el codigo 

1.1 FormularioUsuario.vue:
<template>
    <div class="container">
      <h1>Formulario de Usuario</h1>
      <form id="usuario-form" @submit.prevent="insertar">
        <div class="form-group">
          <label for="idusuario">Idusuario:</label>
          <input type="text" id="idusuario" name="idusuario" required v-model="idusuario" />
        </div>
        <div class="form-group">
          <label for="nombre">Nombre:</label>
          <input type="text" id="nombre" name="nombre" required v-model="nombre" />
        </div>
        <div class="form-group">
          <label for="apellido">Apellido:</label>
          <input type="text" id="apellido" name="apellido" required v-model="apellido" />
        </div>
        <div class="form-group">
          <label for="cedula">Cedula:</label>
          <input type="text" id="cedula" name="cedula" required v-model="cedula" />
        </div>
        <div class="form-group">
          <label for="telefono">Telefono:</label>
          <input type="text" id="telefono" name="telefono" required v-model="telefono" />
        </div>
        <div class="form-group">
          <label for = "direccion">Direccion:</label>
          <input type="text" id="direccion" name="direccion" required v-model="direccion" />
        </div>
        <div class="form-group">
          <label for="email">Email:</label>
          <input type="text" id="email" name="email" required v-model="email" />
        </div>
  
        <button type="submit" id="guardar" name="guardar">Guardar</button><br>
        <button type="button" id="Eliminar" @click="eliminar">Eliminar</button><br>
        <button type="button" id="Actualizar" @click="actualizar">Actualizar</button><br>
        <button type="button" id="Consultar" @click="consultar">Consultar</button><br>
      </form>
    </div>
  </template>
  
  <script>
  import axios from "axios";
  
  export default {
    data() {
      return {
        idusuario: "",
        nombre: "",
        apellido: "",
        cedula: "",
        telefono: "",
        direccion: "",
        email: "",
      };
    },
    methods: {
      insertar() {
        axios
          .post("http://localhost:8080/api/usuarios", {
            idusuario: this.idusuario,
            nombre: this.nombre,
            apellido: this.apellido,
            cedula: this.cedula,
            telefono: this.telefono,
            direccion: this.direccion,
            email: this.email,
          })
          .then((response) => {
            console.log("Usuario registrado con éxito:", response.data);
            alert("Exitoso");
            this.idusuario = "";
            this.nombre = "";
            this.apellido = "";
            this.cedula = "";
            this.telefono = "";
            this.direccion = "";
            this.email = "";
          })
          .catch((error) => {
            console.error("Error al Registrar Usuario", error);
          });
      },
      consultar() {
        axios
          .get("http://localhost:8080/api/usuarios/" + this.idusuario)
          .then((response) => {
            this.nombre = response.data.nombre;
            this.apellido = response.data.apellido;
            this.cedula = response.data.cedula;
            this.telefono = response.data.telefono;
            this.direccion = response.data.direccion;
            this.email = response.data.email;
          })
          .catch((error) => {
            console.error("Error al consultar estudiante", error);
          });
      },
      actualizar() {
        axios
          .put("http://localhost:8080/api/usuarios/actualizar/" + this.idusuario, {
            idusuario: this.idusuario,
            nombre: this.nombre,
            apellido: this.apellido,
            cedula: this.cedula,
            telefono: this.telefono,
            direccion: this.direccion,
            email: this.email,
          })
          .then((response) => {
            console.log("Usuario actualizado con éxito:", response.data);
          })
          .catch((error) => {
            console.error("Error al actualizar Usuario:", error);
          });
      },
      eliminar() {
        axios
          .delete("http://localhost:8080/api/usuarios/" + this.idusuario)
          .then(() => {
            console.log("Usuario eliminado con éxito");
            this.idusuario = "";
            this.nombre = "";
            this.apellido = "";
            this.cedula = "";
            this.telefono = "";
            this.direccion = "";
            this.email = "";
          });
      },
    },
  };
  </script>
  _________________________tercera parte
1.3 tablaUsuario

<template>
    <div class="container">
      <h1>Tabla de Usuarios</h1>
      <table>
        <thead>
          <tr>
            <th>Idusuario</th>
            <th>Nombre</th>
            <th>Apellido</th>
            <th>Cedula</th>
            <th>Telefono</th>
            <th>Direccion</th>
            <th>Email</th>
          </tr>
        </thead>
        <tbody>
          <tr v-for="usuario in usuarios" :key="usuario.idusuario">
            <td>{{ usuario.idusuario }}</td>
            <td>{{ usuario.nombre }}</td>
            <td>{{ usuario.apellido }}</td>
            <td>{{ usuario.cedula }}</td>
            <td>{{ usuario.telefono }}</td>
            <td>{{ usuario.direccion }}</td>
            <td>{{ usuario.email }}</td>
          </tr>
        </tbody>
      </table>
    </div>
  </template>
  
  <script>
  import axios from "axios";
  
  export default {
    data() {
      return {
        usuarios: [],
      };
    },
    methods: {
      obtenerUsuarios() {
        // Método para obtener la lista de todos los usuarios
        axios.get("http://localhost:8080/api/usuarios/listar")
          .then((response) => {
            this.usuarios = response.data;
          });
      },
    },
    mounted() {
      // Llamar al método para obtener la lista de usuarios al cargar el componente
      this.obtenerUsuarios();
    },
  };
  </script>
  ________________________________________________cuarta parte
4.3 UsuarioView.vue
<template>
    <div class="Usuario">
      <div class="components">
      <FormularioUsuario/> 
      <TablaUsuario /> 
    </div>
  </div>
  </template>
  
  <script>
    import FormularioUsuario from "@/components/FormularioUsuario.vue";
    import TablaUsuario from "@/components/TablaUsuario.vue";
  
  export default {
    name: 'UsuariosView', 
  
    components: {
      FormularioUsuario, 
      TablaUsuario, 
    }
  }
  </script>
  
  <style>
  body {
    font-family: Arial, sans-serif;
    background-color: #f0f0f0;
    margin: 0;
    padding: 0;
  }
  
  .components {
    display: grid;
    grid-template-columns: 1fr 2fr;
    grid-auto-rows: 1fr;
  }
  .container {
    /* max-width: 400px;*/
    margin: 1rem;
    padding: 1rem;
    background-color: #fff;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
    border-radius: 5px;
  }
  
  h1 {
    text-align: center;
    margin-bottom: 20px;
  }
  
  .form-group {
    margin-bottom: 15px;
  }
  
  form {
    padding: 2%;
  }
  
  label {
    display: block;
    margin-bottom: 5px;
    font-weight: bold;
  }
  
  input {
    width: 100%;
    padding: 8px;
    border: 1px solid #ccc;
    border-radius: 3px;
  }
  button {
    display: block;
    width: 100%;
    padding: 10%;
    background-color: #0095ff;
    color: #fff;
    border: none;
    box-shadow: 0 0 10px rgba(0, 0, 0.2);
    border-radius: 5px;
    cursor: pointer;

  }
  button:hover {
    background-color: #0056b3;
}

table {
    width: 100%;
    border-collapse: collapse;
    margin-bottom: 20px;
    
}

th, td {
    padding: 10px;
    text-align: left;
 /*   border-bottom: 1px solid #ddd;*/
 border-style: solid;
    
}
tr{

    border-style: solid;
}

th {
    background-color: #007bff;
    color: #fff;
    border-style: solid;
}

tr:hover {
    background-color: #f5f5f5;
}
</style>


  ____________________________quinta parte
5.0 App.vue

<template>
  <nav>
    <router-link to="/">Home</router-link> |
    <router-link to="/about">About</router-link>
    <router-link to="/Usuario">Usuario</router-link>
  </nav>
  <router-view/>
</template>

<style>
#app {
  font-family: Avenir, Helvetica, Arial, sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-align: center;
  color: #2c3e50;
}

nav {
  padding: 30px;
}

nav a {
  font-weight: bold;
  color: #2c3e50;
}

nav a.router-link-exact-active {
  color: #42b983;
}
</style>
________________________________sexta parte
5.1 main.js
import { createApp } from 'vue'
import App from './App.vue'
import router from './router'
import store from './store'

createApp(App).use(store).use(router).mount('#app')
______________ hello word
<template>
  <div class="hello">
    <h1>{{ msg }}</h1>
    <p>
      For a guide and recipes on how to configure / customize this project,<br>
      check out the
      <a href="https://cli.vuejs.org" target="_blank" rel="noopener">vue-cli documentation</a>.
    </p>
    <h3>Installed CLI Plugins</h3>
    <ul>
      <li><a href="https://github.com/vuejs/vue-cli/tree/dev/packages/%40vue/cli-plugin-babel" target="_blank" rel="noopener">babel</a></li>
      <li><a href="https://github.com/vuejs/vue-cli/tree/dev/packages/%40vue/cli-plugin-router" target="_blank" rel="noopener">router</a></li>
      <li><a href="https://github.com/vuejs/vue-cli/tree/dev/packages/%40vue/cli-plugin-vuex" target="_blank" rel="noopener">vuex</a></li>
      <li><a href="https://github.com/vuejs/vue-cli/tree/dev/packages/%40vue/cli-plugin-eslint" target="_blank" rel="noopener">eslint</a></li>
    </ul>
    <h3>Essential Links</h3>
    <ul>
      <li><a href="https://vuejs.org" target="_blank" rel="noopener">Core Docs</a></li>
      <li><a href="https://forum.vuejs.org" target="_blank" rel="noopener">Forum</a></li>
      <li><a href="https://chat.vuejs.org" target="_blank" rel="noopener">Community Chat</a></li>
      <li><a href="https://twitter.com/vuejs" target="_blank" rel="noopener">Twitter</a></li>
      <li><a href="https://news.vuejs.org" target="_blank" rel="noopener">News</a></li>
    </ul>
    <h3>Ecosystem</h3>
    <ul>
      <li><a href="https://router.vuejs.org" target="_blank" rel="noopener">vue-router</a></li>
      <li><a href="https://vuex.vuejs.org" target="_blank" rel="noopener">vuex</a></li>
      <li><a href="https://github.com/vuejs/vue-devtools#vue-devtools" target="_blank" rel="noopener">vue-devtools</a></li>
      <li><a href="https://vue-loader.vuejs.org" target="_blank" rel="noopener">vue-loader</a></li>
      <li><a href="https://github.com/vuejs/awesome-vue" target="_blank" rel="noopener">awesome-vue</a></li>
    </ul>
  </div>
</template>

<script>
export default {
  name: 'HelloWorld',
  props: {
    msg: String
  }
}
</script>

<!-- Add "scoped" attribute to limit CSS to this component only -->
<style scoped>
h3 {
  margin: 40px 0 0;
}
ul {
  list-style-type: none;
  padding: 0;
}
li {
  display: inline-block;
  margin: 0 10px;
}
a {
  color: #42b983;
}
</style>
