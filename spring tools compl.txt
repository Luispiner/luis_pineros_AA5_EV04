mira te voy a enviar todas las interfases de mi backend por favor ayudame a revisarlo y dame el codigo para que funcione
el metodo listarlogeados (porque cambie el nombre de: listar a listarlogeados)

1. Usuario2Controller.java:
package co.edu.sena.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import co.edu.sena.models.entity.Usuario2;
import co.edu.sena.models.service.Usuario2Service;

@RestController
@RequestMapping("/api/usuarioslogin")
@CrossOrigin(origins = "*", methods = {RequestMethod.GET, RequestMethod.POST, RequestMethod.DELETE, RequestMethod.PUT})
public class Usuario2Controller {

    @Autowired
    private Usuario2Service usuario2Service;

    // Este es el Método para Guardar un Usuario nuevo
    @PostMapping
    public Usuario2 guardar(@RequestBody Usuario2 u) {
        return usuario2Service.save(u);
    }

    // Este es el Método para Realizar el login
    @PostMapping("/login")
    public ResponseEntity<String> login(@RequestBody Usuario2 usuario2) {
        // Aquí llama al servicio para realizar el login y obtener un mensaje de respuesta
        String mensaje = usuario2Service.login(usuario2.getUsername(), usuario2.getPassword());
        // Devuelve una respuesta HTTP con el mensaje
        return ResponseEntity.ok(mensaje);
    }

    // Este es el Método para Obtener la lista de usuarios logeados
    @GetMapping("/listarlogeados")
    public List<Usuario2> listarUsuariosLogeados() {
        // Aquí obtienes y devuelves la lista de usuarios logeados desde tu servicio
        return ((Usuario2Controller) usuario2Service).listarUsuariosLogeados();
    }
}
______________________________
2. la interfase Usuario2Service.java: 
package co.edu.sena.models.service;

import java.util.List;

import co.edu.sena.models.entity.Usuario2;
public interface Usuario2Service {
	
	public Usuario2 save (Usuario2 u);
	public String login(String user, String ctr);
	public List<Usuario2> listarUsuarios();
	}

_____________________________________
3.  Usuario2ServiceImpl.java:
package co.edu.sena.models.service;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import co.edu.sena.models.entity.Usuario2;
import co.edu.sena.repository.Usuario2Repository;

@Service
public class Usuario2ServiceImpl implements Usuario2Service {
	
	@Autowired
	Usuario2Repository usuario2Repository;
	
	@Override
	public Usuario2 save(Usuario2 u) {
	//Aqui guarda un nuevo usuario en la base de datos
		return usuario2Repository.save(u);
	}

	@Override
	public String login(String user, String ctr) { 
		// Aqui busca al usuario por su nombre en la base de datos
		Usuario2 usuario2 = usuario2Repository.findByUsername(user);  
		//Aqui verifica si el usuario Existe
		if (usuario2 == null) {
			return "Usuario no encontrado";
		}
		// Aqui compara la contraseña proporcionada con la almacenada
		if (!usuario2.getPassword().equals(ctr)) { 
			// En caso que la contraseña no sea la correcta entonces devuelve mensaje: contraseña incorrecta
			return "Contraseña incorrecta";
		}
		// Aqui si la contraseña es correcta , devuelve un mensaje de inicio Exitoso
		return "Inicio de sesión exitoso";
	}
		@Override
		public List<Usuario2> listarUsuarios() {
        return usuario2Repository.findAll();
    }
}

____________________________________
4. Usuario2.java:

package co.edu.sena.models.entity;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.Table;

@Entity
@Table(name = "usuarioslogin")
public class Usuario2 {
	
	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	@Column (name = "id_usu") // Este es el identificador unico  Autoincrementable
	private Long idu;
	@Column (name = "nom_usu") // Este es el Nombre del Usuario
	private String username;
	@Column (name = "cont_usu") // Este es la Contraseña
	private String password;
	public Usuario2() {
		
	}
	public Usuario2(Long idu, String username, String password) {
		
		this.idu =idu;
		this.username = username; //Aqui se almacena  el nombre de Usuario
		this.password = password; //Aqui esta almacena la contraseña
	}
	public Long getId() {
		return idu;
	}
	public void setId(Long idu) {
		this.idu =idu;
	}
	public String getUsername() {
		return username;
	}
	public void setUsername(String username) {
		this.username = username;
	}
	public String getPassword() {
		return password;
	}
	public void setPassword(String password) {
		this.password = password;
	}
	
	

}
_________________________________________
5. Usuario2Repository.java
package co.edu.sena.repository;

import org.springframework.data.jpa.repository.JpaRepository;

import co.edu.sena.models.entity.Usuario2;

public interface Usuario2Repository extends JpaRepository<Usuario2, Long>{
	Usuario2 findByUsername (String user);
	
	

}
